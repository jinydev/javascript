I"<7<h2 id="데이터-타입">데이터 타입</h2>
<p>자바스크립트는 데이터에 대해서 매우 유연한 언어 입니다. <code class="highlighter-rouge">c</code>언어처럼 데이터를 입력을 위해서 변수의 타입을 지정하지 않습니다.</p>

<p>프로그램의 언어를 학습할때 초보자들이 가장 어려워 하는 것중에 하나가 사전에 변수의 형을 같이 선언을 하는 것입니다. 
하지만 자바스크립트의 경우 변수에 데이터를 저장할때 자료형을 별도로 지정을 하지 않습니다. 
변수명만 선언하여 값을 입력을 하면 자동으로 변수에 저장이 됩니다.</p>

<p>변수에 저장되는 값는 일반적인 자료형 뿐만 아니라 표현식, 함수도 저장이 가능합니다.
변수에 데이터를 저장하게 되면, 변수는 해당 자료에 대한 유형을 가지게 됩니다.<br />
다른말로, 타입(type)이라고 합니다.</p>

<p>자바스크립의 자료형의 값 표현은 크게 원시타입(primitive data type)과 참조 타입(reference data type)입니다.
객체는 참조타입이며, 그외는 원시 타입입니다.</p>

<h3 id="원시타입">원시타입</h3>
<p>원시타입은 메모리에 고정된 크기로 저장이 됩니다.<br />
변수에 대한 값에 대하여 직접 메모리를 할당 받으며, 크기를 가지고 있습니다.</p>

<p>원시타입의 값는 고정된 공간에 할당되기 때문에 변경이 불가능한 immutable value 특징을 가지고 있습니다.</p>

<p>원시 타입은 총 6개가 있습니다.</p>
<ul>
  <li>숫자형</li>
  <li>불형</li>
  <li>문자열</li>
  <li>심볼</li>
  <li>null</li>
  <li>undefined</li>
</ul>

<h3 id="참조타입">참조타입</h3>
<p>메모리의 참조값을 저장합니다.<br />
대표적으로 <code class="highlighter-rouge">객체</code>가 있습니다. 객체는 여러 가지 형태의 값을 가질 수 있습니다.</p>

<p>자바스크립트는 몇개의 내장된 객체 타입을 지원합니다.</p>

<ul>
  <li>Array</li>
  <li>Date</li>
  <li>RegExp</li>
  <li>Map, WeakMap</li>
  <li>Set, WeekSet</li>
</ul>

<hr />

<h2 id="변수-종료">변수 종료</h2>
<p>변수는 사용 용도와 범위에 따라서 4개의 종류로 구분이 됩니다.</p>

<h3 id="범위">범위</h3>
<ul>
  <li>전역변수</li>
  <li>지역변수</li>
</ul>

<h3 id="용도">용도</h3>
<ul>
  <li>매개변수</li>
  <li>맴버변수</li>
</ul>

<hr />

<h2 id="자료형">자료형</h2>
<p>보다 자세한 자바스크립트 데이터 타입에 대한 종류를 알아 봅니다.</p>

<h3 id="숫자형number">숫자형(number)</h3>
<p>숫자 데이터를 저장합니다. 숫자는 다시 <code class="highlighter-rouge">정수형</code>과 <code class="highlighter-rouge">실수형</code>으로 나누어 집니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</code></pre></div></div>

<p>또는, 숫자를 표현할때 16진수로 정의할 수 있습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">color</span> <span class="o">=</span> <span class="err">#</span><span class="nx">ff0000</span><span class="p">;</span>
</code></pre></div></div>

<p>정수와 실수 모두 하나의 자료형으로 처리 됩니다.</p>

<h3 id="문자열">문자열</h3>
<p>문자열은 텍스트 데이터 입니다. 텍스트 데이터를 저장합니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">name</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">hello world</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">작은 따옴표</code> 또는 <code class="highlighter-rouge">큰 따옴표</code>를 사용하여 문자열을 지정합니다.
자바스크립트의 문자열은 <code class="highlighter-rouge">유니코드</code> 텍스트 입니다.</p>

<h4 id="문자-숫자-구분">문자, 숫자 구분</h4>
<p>숫자를 따옴표로 표시를 하면 문자로 처리됩니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">age1</span> <span class="o">=</span> <span class="mi">17</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">age2</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">20</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">age1</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">age2</span><span class="p">);</span>
</code></pre></div></div>

<p>두개의 변수의 타입을 확인해 보도록 합니다.</p>

<p>실행결과</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ node variable_05.js
number
string
</code></pre></div></div>

<h4 id="익스케이프">익스케이프</h4>
<p>익스케이프 표현를 통하여 특별한 기호를 문자열로 작성을 할 수 있습니다.</p>

<h4 id="특수문자">특수문자</h4>
<p>화면에 출력되지 않는 특수한 문자를 문자열로 작성 할 수 있습니다.</p>

<ul>
  <li><code class="highlighter-rouge">\n</code></li>
  <li><code class="highlighter-rouge">\r</code></li>
  <li><code class="highlighter-rouge">\t</code></li>
  <li><code class="highlighter-rouge">\'</code></li>
  <li><code class="highlighter-rouge">\"</code></li>
  <li><code class="highlighter-rouge">\</code>`</li>
  <li><code class="highlighter-rouge">\$</code></li>
  <li><code class="highlighter-rouge">\\</code></li>
  <li><code class="highlighter-rouge">\uXXXX</code></li>
  <li><code class="highlighter-rouge">\uXX</code></li>
</ul>

<h4 id="템플릿-문저열">템플릿 문저열</h4>
<p>문자열 안에 변수의 값을 표현할 수 있습니다.</p>

<p>기존 es5에서는 리터럴 문자열과 변수의 값을 같이 문자열로 처리할 때 <code class="highlighter-rouge">+</code>로 결합을 하였습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">temp</span> <span class="o">=</span> <span class="mf">20.5</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">message</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">현재 온도는 </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">temp</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> 입니다.</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<p>es6에서는 <code class="highlighter-rouge">$기호 특수문자</code>로 결합을 할 수 있습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">temp</span> <span class="o">=</span> <span class="mf">20.5</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">message</span> <span class="o">=</span> <span class="s2">`현재 온도는 </span><span class="p">${</span><span class="nx">temp</span><span class="p">}</span><span class="s2"> 입니다.`</span><span class="p">;</span>
</code></pre></div></div>

<p>이때 주의해야 하는 점은 따옴표가 아닌 백틱으로 문자열을 감싸서 처리를 합니다.</p>

<h3 id="bool">bool</h3>
<p>컴퓨터는 0과 1로 표현을 합니다. 이를 논리값으로 참(true)와 거짓(false) 불 값을 표현합니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">status</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</code></pre></div></div>

<p>논리변수는 조건제어문을 처리할때 많이 사용이 됩니다.</p>

<h3 id="undefined">undefined</h3>
<p>자바스크립트에서만 존재하는 특별한 타입입니다. 자바스크립트를 처음 학습할때 어려운 데이터 타입니다.
4개의 예를 들어 undefined 상태가 되는 경우를 알아 보도록 합니다.</p>

<h5 id="초기화-생략">초기화 생략</h5>
<p>변수를 선언을 하였으나, 초기화를 하지 않는 변수의 값을 말합니다.
아직 변수에 데이터가 한번도 저장된 적이 없기 때문에, 자료형을 알 수 없습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">name</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">name</span><span class="p">);</span>
</code></pre></div></div>

<p>실행결과</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ node variable_06.js
undefined
</code></pre></div></div>

<h4 id="미선언-변수">미선언 변수</h4>
<p>선언되지 않은 변수를 참조할려고 할때 <code class="highlighter-rouge">undefined</code>가 출력이 됩니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">name</span><span class="p">);</span>
</code></pre></div></div>

<p>실행결과</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ node variable_07.js
undefined
</code></pre></div></div>

<h4 id="미전달-매개변수">미전달 매개변수</h4>
<p>함수를 선언할때 매개변수를 함께 인자로 받을 수 있습니다. 하지만, 정작 함수를 호출할때에 인자값을 생략을 하면
함수의 매개변수는 값이 존재 하지 않게 됩니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">hello</span><span class="p">(</span><span class="nx">msg</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">msg</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">hello</span><span class="p">(</span><span class="dl">"</span><span class="s2">안녕하세요</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">hello</span><span class="p">();</span>
</code></pre></div></div>

<p>실행결과</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ node variable_08.js
string
undefined
</code></pre></div></div>

<p>함수를 처음 호출을 할때에는 매개변수의 인자값을 같이 전달을 하였습니다. 이때에는 msg 변수가 string 타입을 가지게 됩니다.</p>

<p>두번째 함수를 호출할때에는 인자값을 전달 하지 않았습니다. 오류가 나지는 않지만, 함수는 정상적으로 실행이 됩니다.
인자 값이 없기 때문에, 변수를 초기화 하지 못하였습니다. 이때에는 msg 변수가 undefined 타입을 가지게 됩니다.</p>

<h4 id="미선언-프로퍼티">미선언 프로퍼티</h4>
<p>객체지향에서 객체는 내부 변수인 프로퍼티를 가지고 있습니다. 미선언 되어있는 프로퍼티를 접그할 때에서 undefined 가 표시됩니다.</p>

<h3 id="null">null</h3>
<p>null은 undefined와 다른 값입니다. 변수에 아무런 값도 없는 null 을 저장합니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">empty</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</code></pre></div></div>

<p>자바스크립트는 변수를 초기화 하거나, 처음 값을 입력할때 데이터의 타입을 정의하게 됩니다.
변수가 초기화 없이 생성이 되면, undefined를 가지게 됩니다. 그리고 null은 비어있는 값으로 초기화를 한 것입니다.</p>

<p>변수를 초기화 할때 많이 이용을 합니다.</p>

<h3 id="심볼">심볼</h3>
<p>상수형인 심볼 값을 저장할 수 있습니다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var system = symbol('abcd');
</code></pre></div></div>

<p>심볼은 es6에서 추가된 자료형 입니다.</p>

<h3 id="객체">객체</h3>
<p>객체의 값을 저장할 수 있습니다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var obj = {
    name: "apple",
    price: 1000
}
</code></pre></div></div>

<h3 id="배열">배열</h3>
<p>배열의 값을 저장할 수 있습니다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var fruits = ['banana', 'apple'];
</code></pre></div></div>

<h3 id="함수">함수</h3>
<p>함수를 담을 수 있습니다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var myfunc = function() {

}
</code></pre></div></div>

<h3 id="글로벌-객체">글로벌 객체</h3>
<p>자바스크립트의 모든 객체의 부모객체를 말합니다.
다양한 <code class="highlighter-rouge">표준 내장 객체</code>를 제공합니다.</p>

:ET